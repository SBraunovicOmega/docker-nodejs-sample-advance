name: Docker Build and Push Image to ECR

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag version'
        required: true
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+'
      - 'v[0-9]+'

env:
  AWS_REGION: eu-central-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} 
  ECR_REPOSITORY_NAME: private-ecr
  HELM_RELEASE_NAME: todo
  HELM_CHART_PATH: infrastructure/Helm
  EKS_NAME: task2_eks

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log intoGitHub Packages
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "${{ github.actor }}" --password-stdin docker.pkg.github.com

    - name: Choose Tag
      id: tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "::set-output name=primary_tag::${{ inputs.version }}"
        else
          echo "::set-output name=primary_tag::${{ github.ref_name }}"
        fi
    
    - name: Print Tag Values
      run: |
        echo "Primary tag value: ${{ steps.tag.outputs.primary_tag }}"
    
    - name: Build Docker Image
      run: |
        docker build -t docker.pkg.github.com/${{ github.repository }}/test-app2:${{ steps.tag.outputs.primary_tag }} .

    - name: Push Docker Image with Primary Tag
      run: |
        docker push docker.pkg.github.com/${{ github.repository }}/test-app2:${{ steps.tag.outputs.primary_tag }}

    - name: Tag and Push Docker Image as Latest
      run: |
        docker tag docker.pkg.github.com/${{ github.repository }}/test-app2:${{ steps.tag.outputs.primary_tag }} docker.pkg.github.com/${{ github.repository }}/test-app2:latest
        docker push docker.pkg.github.com/${{ github.repository }}/test-app2:latest
    
    outputs:
      tag-version: ${{steps.tag.outputs.primary_tag}}


  helm-release:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: Auth with OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume:${{sercrets.AWS_ROLE_ARN}}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: ${{ env.AWS_ACCOUNT_ID }}
        mask-password: 'true'
      
    - name: Set up helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: 'v3.14.4'
      id: install

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Upgrade Helm Release
      run: |
        helm upgrade ${{ env.HELM_RELEASE_NAME }} oci://${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_NAME }} -n vegait-training --set image.tag=${{ needs.build-and-push-docker-image.outputs.tag-version }} --reuse-values

    
